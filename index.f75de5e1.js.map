{"mappings":"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","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nfunction makeNumber(str) {\n  return Number(str.replace(/[$,]/g, ''));\n}\n\nfunction detectDataType(value) {\n  if (!isNaN(value) || !isNaN(makeNumber(value))) {\n    return 'number';\n  } else {\n    return 'string';\n  }\n}\n\nconst body = document.querySelector('body');\nconst table = document.querySelector('table');\nconst headers = document.querySelectorAll('th');\nconst firstRow = table.querySelector('tbody tr');\nconst tableBody = table.querySelector('tbody');\nconst tableRows = Array.from(tableBody.rows);\n\nif (firstRow) {\n  headers.forEach((header, index) => {\n    const firstCell = firstRow.cells[index];\n\n    if (firstCell) {\n      const firstCellValue = firstCell.textContent.trim();\n\n      header.dataset.type = detectDataType(firstCellValue);\n      header.dataset.sortASC = 'true';\n\n      header.addEventListener('click', () => {\n        const isAscending = header.dataset.sortASC === 'true';\n\n        header.dataset.sortASC = isAscending ? 'false' : 'true';\n\n        const sortedRows = tableRows.sort((a, b) => {\n          const aContent = a.cells[index].textContent.trim();\n          const bContent = b.cells[index].textContent.trim();\n\n          let comparison = 0;\n\n          if (header.dataset.type === 'number') {\n            comparison = makeNumber(aContent) - makeNumber(bContent);\n          } else {\n            comparison = aContent.localeCompare(bContent);\n          }\n\n          return isAscending ? comparison : -comparison;\n        });\n\n        tableBody.innerHTML = '';\n\n        sortedRows.forEach((row) => {\n          tableBody.appendChild(row);\n        });\n      });\n    }\n  });\n}\n\nlet selectedRow = null;\n\ntableRows.forEach((row) => {\n  row.addEventListener('click', (e) => {\n    if (selectedRow) {\n      selectedRow.classList.remove('active');\n    }\n\n    const currentRow = e.currentTarget;\n\n    currentRow.classList.add('active');\n\n    selectedRow = currentRow;\n  });\n});\n\nconst form = document.createElement('form');\n\nform.className = 'new-employee-form';\nform.action = '#';\nform.method = 'POST';\nform.setAttribute('novalidate', true);\n\nform.innerHTML = `\n  <label>\n    Name:\n    <input\n      data-qa=\"name\"\n      type=\"text\"\n      name=\"name\"\n      required\n    />\n  </label>\n\n  <label>\n    Position:\n    <input\n      data-qa=\"position\"\n      type=\"text\"\n      name=\"position\"\n      required\n    />\n  </label>\n\n  <label>\n    Office:\n    <select\n      data-qa=\"office\"\n      name=\"office\"\n      required\n    >\n      <option value=\"empty\">Select office</option>\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select>\n  </label>\n\n  <label>\n    Age:\n    <input\n      data-qa=\"age\"\n      type=\"number\"\n      name=\"age\"\n      required\n    />\n  </label>\n\n  <label>\n    Salary:\n    <input\n      data-qa=\"salary\"\n      type=\"number\"\n      name=\"salary\"\n      required\n    />\n  </label>\n  <button type=\"submit\">Save to table</button>\n`;\n\nbody.append(form);\n\nconst pushNotification = (posTop, posRight, title, description, type = '') => {\n  const message = document.createElement('div');\n\n  message.className = 'notification';\n  message.dataset.qa = 'notification';\n  message.classList.add(type);\n  message.style.top = `${posTop}px`;\n  message.style.right = `${posRight}px`;\n\n  message.innerHTML = `\n    <h2 class='title'>\n      ${title}\n    </h2>\n    <p>\n      ${description}\n    </p>\n  `;\n\n  body.append(message);\n\n  setTimeout(() => {\n    message.remove();\n  }, 5000);\n};\n\nconst checkData = (data) => {\n  const { name: employeeName, position, office, age, salary } = data;\n\n  if (!employeeName || employeeName.trim().length < 4) {\n    pushNotification(\n      10,\n      10,\n      'Error!',\n      'Name must be at least 4 characters long',\n      'error',\n    );\n\n    return false;\n  }\n\n  if (!position.trim()) {\n    pushNotification(\n      10,\n      10,\n      'Error!',\n      'Position field cannot be empty!',\n      'error',\n    );\n\n    return false;\n  }\n\n  if (!office || office === 'empty') {\n    pushNotification(\n      10,\n      10,\n      'Error!',\n      'Office field cannot be empty!',\n      'error',\n    );\n\n    return false;\n  }\n\n  if (!age || age < 18 || age > 90) {\n    pushNotification(\n      10,\n      10,\n      'Error!',\n      'Age must be between 18 and 90',\n      'error',\n    );\n\n    return false;\n  }\n\n  if (!salary || isNaN(salary)) {\n    pushNotification(500, 10, 'Error!', 'Salary must be a number', 'error');\n\n    return false;\n  }\n\n  return true;\n};\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const formData = new FormData(e.target);\n  const formObj = Object.fromEntries(formData.entries());\n\n  if (!checkData(formObj)) {\n    return;\n  }\n\n  const newRow = document.createElement('tr');\n\n  const formattedSalary = Number(formObj.salary).toLocaleString('en-US');\n\n  newRow.innerHTML = `\n    <td>${formObj.name}</td>\n    <td>${formObj.position}</td>\n    <td>${formObj.office}</td>\n    <td>${formObj.age}</td>\n    <td>$${formattedSalary}</td>\n    `;\n\n  tableBody.append(newRow);\n\n  pushNotification(\n    10,\n    10,\n    'Success!',\n    'New employee added to the table',\n    'success',\n  );\n\n  form.reset();\n});\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}